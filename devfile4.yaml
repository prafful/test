metadata:
  name: Garima4Agrawal4-9423381-9422941-1633086877681
projects:
  - name: Garima4Agrawal4-9423381-9422941-1633086877681
    source:
      location: 'https://github.com/NavinIIHT/Stock-Market-MVC.git'
      type: git
components:
  - id: redhat/java/latest
    memoryLimit: 1280Mi
    type: chePlugin
  - mountSources: true
    endpoints:
      - name: 8080/tcp
        port: 8080
    memoryLimit: 700Mi
    type: dockerimage
    volumes:
      - name: m2
        containerPath: /home/user/.m2
    alias: tools
    image: 'quay.io/eclipse/che-java8-maven:7.4.0'
    env:
      - value: >-
          -XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4
          -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true
          -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/user
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
  - mountSources: true
    endpoints:
      - name: db1662601174-1633086877681-db
        port: 3306
        attributes:
          discoverable: 'true'
          public: 'false'
    memoryLimit: 300Mi
    type: dockerimage
    alias: mysql
    image: docker.io/centos/mysql-57-centos7
    env:
      - value: petclinic
        name: MYSQL_USER
      - value: password
        name: MYSQL_PASSWORD
      - value: petclinic
        name: MYSQL_DATABASE
      - value: '$(echo ${0})\\$'
        name: PS1
apiVersion: 1.0.0
commands:
  - name: Debug remote java application
    actions:
      - referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "java",
              "name": "Debug (Attach) - Remote",
              "request": "attach",
              "hostName": "localhost",
              "port": 5005
            }]
          }
        type: vscode-launch
  - name: maven build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/Garima4Agrawal4-9423381-9422941-1633086877681'
        type: exec
        command: mvn clean install -DskipTests
        component: tools
  - name: prepare database
    actions:
      - type: exec
        command: >
          /opt/rh/rh-mysql57/root/usr/bin/mysql -u root <
          ${CHE_PROJECTS_ROOT}/web-java-spring-petclinic/src/main/resources/db/mysql/schema.sql
          &&

          echo -e "\e[32mDone.\e[0m Database petclinic was configured!"
        component: mysql
  - name: run webapp
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/Garima4Agrawal4-9423381-9422941-1633086877681'
        type: exec
        command: >
          SPRING_DATASOURCE_URL=jdbc:mysql://db/petclinic \

          SPRING_DATASOURCE_USERNAME=petclinic \

          SPRING_DATASOURCE_PASSWORD=password \

          java -jar -Dspring.profiles.active=mysql \

          -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
          \

          target/*.jar
        component: tools
